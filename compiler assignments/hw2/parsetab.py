
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '44F01E047879EC6FDADCD26CC49800D1'
    
_lr_action_items = {'RETURN':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,73,-50,73,-49,-40,-39,-51,-36,-46,-47,-48,-45,73,73,-53,-43,-40,-41,73,-52,-42,73,73,73,-54,-44,-40,73,73,]),'VOID':([9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,38,69,70,71,130,],[-112,-10,-112,-14,-15,-8,-9,-112,27,-13,-112,-15,-16,-12,-17,-11,-29,-28,-27,-36,]),'LESS_THAN_OR_EQUAL':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,121,122,143,144,145,146,147,165,168,175,176,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,156,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,156,156,-98,-97,-95,-96,-101,-100,-80,-69,]),'GREATER_THAN_OR_EQUAL':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,121,122,143,144,145,146,147,165,168,175,176,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,155,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,155,155,-98,-97,-95,-96,-101,-100,-80,-69,]),'WHILE':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,76,-50,76,-49,-40,-39,-51,-36,-46,-47,-48,-45,76,199,-53,-43,-40,-41,76,-52,-42,76,199,199,-54,-44,-40,199,199,]),'STATIC':([9,11,12,13,14,15,16,17,19,21,22,38,69,70,71,130,],[-112,-10,-112,-14,-15,-8,-9,24,-13,-112,-15,-11,-29,-28,-27,-36,]),'FLOAT_CONST':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,77,77,77,-50,77,-49,-40,77,77,-39,-51,77,77,77,77,77,-36,-46,-47,77,77,-48,77,77,77,77,77,77,77,-45,77,77,77,77,77,77,77,77,77,77,77,-53,-43,-40,-41,77,77,77,77,77,-52,-42,77,77,77,77,-54,-44,-40,77,77,77,]),'NEW':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,78,78,78,-50,78,-49,-40,78,78,-39,-51,78,78,78,78,78,-36,-46,-47,78,78,-48,78,78,78,78,78,78,78,-45,78,78,78,78,78,78,78,78,78,78,78,-53,-43,-40,-41,78,78,78,78,78,-52,-42,78,78,78,78,-54,-44,-40,78,78,78,]),'NULL':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,83,83,83,-50,83,-49,-40,83,83,-39,-51,83,83,83,83,83,-36,-46,-47,83,83,-48,83,83,83,83,83,83,83,-45,83,83,83,83,83,83,83,83,83,83,83,-53,-43,-40,-41,83,83,83,83,83,-52,-42,83,83,83,83,-54,-44,-40,83,83,83,]),'TRUE':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,79,79,79,-50,79,-49,-40,79,79,-39,-51,79,79,79,79,79,-36,-46,-47,79,79,-48,79,79,79,79,79,79,79,-45,79,79,79,79,79,79,79,79,79,79,79,-53,-43,-40,-41,79,79,79,79,79,-52,-42,79,79,79,79,-54,-44,-40,79,79,79,]),'STRING_CONST':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,80,80,80,-50,80,-49,-40,80,80,-39,-51,80,80,80,80,80,-36,-46,-47,80,80,-48,80,80,80,80,80,80,80,-45,80,80,80,80,80,80,80,80,80,80,80,-53,-43,-40,-41,80,80,80,80,80,-52,-42,80,80,80,80,-54,-44,-40,80,80,80,]),'!':([73,84,108,109,110,126,128,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,192,206,209,218,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'INT_CONST':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,82,82,82,-50,82,-49,-40,82,82,-39,-51,82,82,82,82,82,-36,-46,-47,82,82,-48,82,82,82,82,82,82,82,-45,82,82,82,82,82,82,82,82,82,82,82,-53,-43,-40,-41,82,82,82,82,82,-52,-42,82,82,82,82,-54,-44,-40,82,82,82,]),'NOT_EQUAL':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,119,121,122,143,144,145,146,147,165,168,175,176,177,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,152,-94,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,152,-93,-92,-98,-97,-95,-96,-101,-100,-80,-69,]),')':([20,42,44,48,49,50,51,54,55,57,58,59,61,63,67,72,77,79,80,82,83,87,88,94,97,100,102,106,111,112,113,114,115,116,117,118,119,121,122,125,126,131,139,140,141,142,143,144,145,146,147,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,194,197,204,205,210,211,215,224,226,],[34,-112,-112,-112,-112,-31,62,-30,64,-26,66,-32,-34,-35,-112,-33,-60,-63,-61,-59,-62,-65,-111,-67,-64,-66,-70,-110,-71,-77,-109,-82,-102,-79,-105,-89,-91,-94,-99,-81,-112,168,-86,-84,-87,-85,-109,-106,-70,-107,-108,-72,-73,186,-112,-78,190,-112,-68,-55,-56,193,-83,-88,-103,-104,-90,-93,-92,-98,-97,-95,-96,-101,-100,-80,-74,-76,197,-112,-69,-75,-112,216,217,219,-112,227,]),'(':([5,33,37,39,40,41,45,47,56,57,65,68,73,74,76,84,85,89,93,95,96,98,99,103,104,105,107,108,109,110,112,116,126,128,129,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,165,167,188,190,192,193,195,196,199,200,201,202,203,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[7,42,44,-18,-112,48,-23,-25,-112,-26,-24,84,84,126,128,84,-79,-50,134,84,136,-49,-40,84,84,-39,-51,84,84,84,126,-79,84,84,167,-36,-46,-47,84,84,-48,84,84,84,84,84,84,84,-45,84,84,84,84,84,84,-78,84,84,84,84,84,-53,-43,206,-40,208,-41,209,84,84,84,84,84,-52,-42,84,84,84,84,-54,-44,-40,84,84,84,]),'+':([73,77,79,80,82,83,84,87,94,97,100,102,108,109,110,111,112,113,115,116,117,122,126,128,136,138,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,165,167,168,175,176,180,181,182,183,184,185,186,188,192,197,206,209,218,],[109,-60,-63,-61,-59,-62,109,-65,-67,-64,-66,-70,109,109,109,-71,-77,-109,-102,-79,-105,160,109,109,109,109,-109,-106,-70,-107,-108,109,109,109,109,109,109,109,109,109,109,109,109,-78,109,-68,-103,-104,160,160,160,160,-101,-100,-80,109,109,-69,109,109,109,]),'*':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,143,144,145,146,147,165,168,175,176,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,149,-79,-105,-109,-106,-70,-107,-108,-78,-68,-103,-104,149,149,-80,-69,]),'-':([73,77,79,80,82,83,84,87,94,97,100,102,108,109,110,111,112,113,115,116,117,122,126,128,136,138,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,165,167,168,175,176,180,181,182,183,184,185,186,188,192,197,206,209,218,],[110,-60,-63,-61,-59,-62,110,-65,-67,-64,-66,-70,110,110,110,-71,-77,-109,-102,-79,-105,159,110,110,110,110,-109,-106,-70,-107,-108,110,110,110,110,110,110,110,110,110,110,110,110,-78,110,-68,-103,-104,159,159,159,159,-101,-100,-80,110,110,-69,110,110,110,]),',':([40,41,49,56,57,63,67,77,79,80,82,83,87,94,97,100,102,111,112,113,114,115,116,117,118,119,121,122,125,139,140,141,142,143,144,145,146,147,164,165,168,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,197,],[46,-26,60,46,-26,-35,60,-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-82,-102,-79,-105,-89,-91,-94,-99,-81,-86,-84,-87,-85,-109,-106,-70,-107,-108,188,-78,-68,-83,-88,-103,-104,-90,-93,-92,-98,-97,-95,-96,-101,-100,-80,188,-69,]),'PRIVATE':([9,11,12,15,16,21,38,69,70,71,130,],[13,-10,13,-8,-9,13,-11,-29,-28,-27,-36,]),'.':([74,75,77,79,80,82,83,85,87,88,94,97,100,102,111,112,113,116,141,142,143,145,165,168,186,197,],[-77,127,-60,-63,-61,-59,-62,-79,-65,-71,-67,-64,-66,-70,-71,-77,127,-79,-70,-70,127,-70,-78,-68,-80,-69,]),'CONTINUE':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,101,-50,101,-49,-40,-39,-51,-36,-46,-47,-48,-45,101,101,-53,-43,-40,-41,101,-52,-42,101,101,101,-54,-44,-40,101,101,]),';':([29,39,40,41,45,47,56,57,65,68,73,77,79,80,82,83,86,87,88,89,92,94,95,97,98,99,100,101,102,105,106,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,132,133,134,137,139,140,141,142,143,144,145,146,147,154,165,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,190,192,193,195,196,197,198,200,202,207,208,212,213,214,216,217,218,219,220,221,222,223,225,227,],[38,-18,-112,-26,-23,-25,-112,-26,-24,89,-112,-60,-63,-61,-59,-62,132,-65,-111,-50,133,-67,89,-64,-49,-40,-66,137,-70,-39,-110,-51,-71,-77,-109,-82,-102,-79,-105,-89,-91,154,-94,-99,-57,-58,-81,-36,-46,-47,-112,-48,-86,-84,-87,-85,-109,-106,-70,-107,-108,-45,-78,-68,-55,192,-56,-83,-88,-103,-104,-90,-93,-92,-98,-97,-95,-96,-101,-100,-80,89,-112,89,-53,-43,-69,205,-40,-41,89,-112,-52,-42,218,89,89,-112,89,-54,-44,224,-40,89,89,]),'=':([74,85,102,112,116,165,],[-77,-79,138,-77,-79,-78,]),'CLASS':([0,3,8,36,43,],[1,1,-4,-5,-3,]),'MINUS_MINUS':([39,40,45,47,56,57,65,68,73,74,84,85,89,95,98,99,102,105,107,112,116,126,128,130,132,133,134,136,137,138,154,165,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,103,103,-77,103,-79,-50,103,-49,-40,139,-39,-51,-77,-79,103,103,-36,-46,-47,103,103,-48,103,-45,-78,103,103,103,103,103,-53,-43,-40,-41,103,103,103,103,103,-52,-42,103,103,103,103,-54,-44,-40,103,103,103,]),'$end':([0,2,3,4,6,8,36,43,],[-112,0,-112,-2,-1,-4,-5,-3,]),'FOR':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,93,-50,93,-49,-40,-39,-51,-36,-46,-47,-48,-45,93,201,-53,-43,-40,-41,93,-52,-42,93,201,201,-54,-44,-40,201,201,]),'EQUAL':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,119,121,122,143,144,145,146,147,165,168,175,176,177,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,153,-94,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,153,-93,-92,-98,-97,-95,-96,-101,-100,-80,-69,]),'ELSE':([39,40,45,47,56,57,65,89,98,107,130,132,133,137,154,195,200,212,220,223,],[-18,-112,-23,-25,-112,-26,-24,-50,-49,-51,-36,-46,-47,-48,-45,-53,207,-52,-54,225,]),'>':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,121,122,143,144,145,146,147,165,168,175,176,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,158,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,158,158,-98,-97,-95,-96,-101,-100,-80,-69,]),'EXTENDS':([7,],[10,]),'ID':([1,9,10,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,30,31,32,33,38,39,40,42,44,45,46,47,48,52,53,56,57,60,65,68,69,70,71,73,78,84,85,89,90,95,98,99,103,104,105,107,108,109,110,126,127,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[5,-112,20,-10,-112,-14,-15,-8,-9,-112,33,-13,-112,-15,-16,-12,-17,37,-20,-19,-21,41,-22,-11,-18,-112,53,53,-23,57,-25,53,57,-22,-112,-26,53,-24,85,-29,-28,-27,116,129,116,-22,-50,57,85,-49,-40,116,116,-39,-51,116,116,116,116,165,116,-36,-46,-47,116,116,-48,116,116,116,116,116,116,116,-45,116,116,116,116,116,116,116,116,85,116,85,-53,-43,-40,-41,116,116,85,116,116,-52,-42,85,85,116,85,-54,-44,-40,116,85,85,]),'IF':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,96,-50,96,-49,-40,-39,-51,-36,-46,-47,-48,-45,96,203,-53,-43,-40,-41,96,-52,-42,96,203,203,-54,-44,-40,203,203,]),'FALSE':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,97,97,97,-50,97,-49,-40,97,97,-39,-51,97,97,97,97,97,-36,-46,-47,97,97,-48,97,97,97,97,97,97,97,-45,97,97,97,97,97,97,97,97,97,97,97,-53,-43,-40,-41,97,97,97,97,97,-52,-42,97,97,97,97,-54,-44,-40,97,97,97,]),'/':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,143,144,145,146,147,165,168,175,176,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,150,-79,-105,-109,-106,-70,-107,-108,-78,-68,-103,-104,150,150,-80,-69,]),'INT':([9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,38,39,40,42,44,45,47,48,56,57,60,65,68,69,70,71,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-112,-10,-112,-14,-15,-8,-9,-112,30,-13,-112,-15,-16,-12,-17,-11,-18,-112,30,30,-23,-25,30,-112,-26,30,-24,30,-29,-28,-27,-50,30,-49,-40,-39,-51,-36,-46,-47,-48,-45,30,30,-53,-43,-40,-41,30,-52,-42,30,30,30,-54,-44,-40,30,30,]),'SUPER':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,94,94,94,-50,94,-49,-40,94,94,-39,-51,94,94,94,94,94,-36,-46,-47,94,94,-48,94,94,94,94,94,94,94,-45,94,94,94,94,94,94,94,94,94,94,94,-53,-43,-40,-41,94,94,94,94,94,-52,-42,94,94,94,94,-54,-44,-40,94,94,94,]),'FLOAT':([9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,38,39,40,42,44,45,47,48,56,57,60,65,68,69,70,71,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-112,-10,-112,-14,-15,-8,-9,-112,28,-13,-112,-15,-16,-12,-17,-11,-18,-112,28,28,-23,-25,28,-112,-26,28,-24,28,-29,-28,-27,-50,28,-49,-40,-39,-51,-36,-46,-47,-48,-45,28,28,-53,-43,-40,-41,28,-52,-42,28,28,28,-54,-44,-40,28,28,]),'BOOL_AND':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,118,119,121,122,143,144,145,146,147,165,168,174,175,176,177,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,151,-91,-94,-99,-109,-106,-70,-107,-108,-78,-68,151,-103,-104,-90,-93,-92,-98,-97,-95,-96,-101,-100,-80,-69,]),'<':([77,79,80,82,83,87,94,97,100,102,111,112,113,115,116,117,121,122,143,144,145,146,147,165,168,175,176,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,-102,-79,-105,157,-99,-109,-106,-70,-107,-108,-78,-68,-103,-104,157,157,-98,-97,-95,-96,-101,-100,-80,-69,]),'BREAK':([39,40,45,47,56,57,65,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-18,-112,-23,-25,-112,-26,-24,92,-50,92,-49,-40,-39,-51,-36,-46,-47,-48,-45,92,92,-53,-43,-40,-41,92,-52,-42,92,92,92,-54,-44,-40,92,92,]),'THIS':([39,40,45,47,56,57,65,68,73,84,89,95,98,99,103,104,105,107,108,109,110,126,128,130,132,133,134,136,137,138,148,149,150,151,152,153,154,155,156,157,158,159,160,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,100,100,100,-50,100,-49,-40,100,100,-39,-51,100,100,100,100,100,-36,-46,-47,100,100,-48,100,100,100,100,100,100,100,-45,100,100,100,100,100,100,100,100,100,100,100,-53,-43,-40,-41,100,100,100,100,100,-52,-42,100,100,100,100,-54,-44,-40,100,100,100,]),'BOOLEAN':([9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,38,39,40,42,44,45,47,48,56,57,60,65,68,69,70,71,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[-112,-10,-112,-14,-15,-8,-9,-112,31,-13,-112,-15,-16,-12,-17,-11,-18,-112,31,31,-23,-25,31,-112,-26,31,-24,31,-29,-28,-27,-50,31,-49,-40,-39,-51,-36,-46,-47,-48,-45,31,31,-53,-43,-40,-41,31,-52,-42,31,31,31,-54,-44,-40,31,31,]),'PLUS_PLUS':([39,40,45,47,56,57,65,68,73,74,84,85,89,95,98,99,102,105,107,112,116,126,128,130,132,133,134,136,137,138,154,165,167,188,190,192,193,195,196,200,202,205,206,207,208,209,212,213,216,217,218,219,220,221,223,224,225,227,],[-18,-112,-23,-25,-112,-26,-24,104,104,-77,104,-79,-50,104,-49,-40,140,-39,-51,-77,-79,104,104,-36,-46,-47,104,104,-48,104,-45,-78,104,104,104,104,104,-53,-43,-40,-41,104,104,104,104,104,-52,-42,104,104,104,104,-54,-44,-40,104,104,104,]),'{':([5,34,39,40,45,47,56,57,62,64,65,66,68,89,95,98,99,105,107,130,132,133,137,154,190,193,195,196,200,202,207,212,213,216,217,219,220,221,223,225,227,],[9,9,-18,-112,-23,-25,-112,-26,68,68,-24,68,68,-50,68,-49,-40,-39,-51,-36,-46,-47,-48,-45,68,68,-53,-43,-40,-41,68,-52,-42,68,68,68,-54,-44,-40,68,68,]),'BOOL_OR':([77,79,80,82,83,87,94,97,100,102,111,112,113,114,115,116,117,118,119,121,122,143,144,145,146,147,165,168,174,175,176,177,178,179,180,181,182,183,184,185,186,197,],[-60,-63,-61,-59,-62,-65,-67,-64,-66,-70,-71,-77,-109,148,-102,-79,-105,-89,-91,-94,-99,-109,-106,-70,-107,-108,-78,-68,-88,-103,-104,-90,-93,-92,-98,-97,-95,-96,-101,-100,-80,-69,]),'}':([11,12,15,16,21,22,23,35,38,39,40,45,47,56,57,65,68,69,70,71,81,89,91,95,98,99,105,107,130,132,133,135,137,154,195,196,200,202,212,213,220,221,223,],[-10,-112,-8,-9,-112,-7,36,-6,-11,-18,-112,-23,-25,-112,-26,-24,-112,-29,-28,-27,130,-50,-38,-112,-49,-40,-39,-51,-36,-46,-47,-37,-48,-45,-53,-43,-40,-41,-52,-42,-54,-44,-40,]),'PUBLIC':([9,11,12,15,16,21,38,69,70,71,130,],[19,-10,19,-8,-9,19,-11,-29,-28,-27,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'placeholder11':([134,205,208,224,],[170,210,214,226,]),'variables':([32,90,],[39,39,]),'constructor_decl':([9,12,21,],[11,11,11,]),'primary':([68,73,84,95,103,104,108,109,110,126,128,134,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[75,113,113,75,75,75,143,143,143,113,113,75,113,113,143,143,143,143,143,143,143,143,143,143,143,143,113,113,75,113,75,75,113,75,75,113,75,75,113,75,75,75,75,]),'placeholder9':([68,95,],[81,135,]),'formal_param':([42,44,48,60,],[49,49,49,67,]),'class_body_decl':([9,12,21,],[12,21,21,]),'arguments':([126,167,],[161,161,]),'stmt_expr':([68,95,134,190,193,205,207,208,216,217,219,224,225,227,],[86,86,169,86,86,169,86,169,86,86,86,169,86,86,]),'literal':([68,73,84,95,103,104,108,109,110,126,128,134,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'program':([0,3,],[2,6,]),'class_decl':([0,3,],[3,3,]),'method_invocation':([68,73,84,95,103,104,108,109,110,126,128,134,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[88,111,111,88,111,111,111,111,111,111,111,88,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,88,111,88,88,111,88,88,111,88,88,111,88,88,88,88,]),'type':([18,42,44,48,60,68,95,190,193,207,216,217,219,225,227,],[32,52,52,52,52,90,90,90,90,90,90,90,90,90,90,]),'empty':([0,3,9,12,17,21,40,42,44,48,49,56,67,68,73,95,126,134,164,167,192,194,205,208,218,224,],[4,4,14,22,26,22,47,50,50,50,61,47,61,91,124,91,162,171,189,162,124,189,171,171,124,171,]),'formals':([42,44,48,],[54,54,54,]),'field_access':([68,73,84,95,103,104,108,109,110,126,128,134,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[74,112,112,74,112,112,112,112,112,112,112,74,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,74,112,74,74,112,74,74,112,74,74,112,74,74,74,74,]),'p1':([73,84,126,128,136,138,167,188,192,206,209,218,],[114,114,114,114,114,114,114,114,114,114,114,114,]),'stmt':([68,95,193,219,],[95,95,202,202,]),'placeholder12':([73,192,218,],[120,198,222,]),'variable':([32,46,52,90,],[40,56,63,40,]),'placeholder15':([164,194,],[187,204,]),'openStmt':([68,95,190,193,207,216,217,219,225,227,],[105,105,196,105,213,221,196,105,213,221,]),'placeholder14':([126,167,],[163,191,]),'p2':([73,84,126,128,136,138,148,167,188,192,206,209,218,],[118,118,118,118,118,118,174,118,118,118,118,118,118,]),'p3':([73,84,126,128,136,138,148,151,167,188,192,206,209,218,],[119,119,119,119,119,119,119,177,119,119,119,119,119,119,]),'modifier':([9,12,21,],[18,18,18,]),'p6':([73,84,126,128,136,138,148,151,152,153,155,156,157,158,159,160,167,188,192,206,209,218,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,184,185,115,115,115,115,115,115,]),'p7':([73,84,108,109,110,126,128,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,192,206,209,218,],[117,117,144,146,147,117,117,117,117,117,175,176,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'p4':([73,84,126,128,136,138,148,151,152,153,167,188,192,206,209,218,],[121,121,121,121,121,121,121,121,178,179,121,121,121,121,121,121,]),'p5':([73,84,126,128,136,138,148,151,152,153,155,156,157,158,167,188,192,206,209,218,],[122,122,122,122,122,122,122,122,122,122,180,181,182,183,122,122,122,122,122,122,]),'field_decl':([9,12,21,],[15,15,15,]),'method_decl':([9,12,21,],[16,16,16,]),'var_decl':([18,68,95,190,193,207,216,217,219,225,227,],[29,98,98,98,98,98,98,98,98,98,98,]),'assign':([68,73,84,95,126,128,134,136,138,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[106,125,125,106,125,125,106,125,125,125,125,106,125,106,106,125,106,106,125,106,106,125,106,106,106,106,]),'closedStmt':([68,95,190,193,207,216,217,219,225,227,],[99,99,195,200,212,220,195,223,212,220,]),'placeholder8':([49,67,],[59,72,]),'lhs':([68,73,84,95,103,104,108,109,110,126,128,134,136,138,148,149,150,151,152,153,155,156,157,158,159,160,167,188,190,192,193,205,206,207,208,209,216,217,218,219,224,225,227,],[102,102,102,102,141,142,145,145,145,102,102,102,102,102,145,145,145,145,145,145,145,145,145,145,145,145,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'block':([62,64,66,68,95,190,193,207,216,217,219,225,227,],[69,70,71,107,107,107,107,107,107,107,107,107,107,]),'expr':([73,84,126,128,136,138,167,188,192,206,209,218,],[123,131,164,166,172,173,164,194,123,211,215,123,]),'placeholder1':([5,34,],[8,43,]),'placeholder3':([9,12,21,],[17,17,17,]),'placeholder2':([12,21,],[23,35,]),'placeholder5':([40,56,],[45,65,]),'placeholder4':([17,],[25,]),'placeholder7':([42,44,48,],[51,55,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_decl program','program',2,'p_program','decafparser.py',5),
  ('program -> empty','program',1,'p_program','decafparser.py',6),
  ('class_decl -> CLASS ID ( EXTENDS ID ) placeholder1','class_decl',7,'p_class_decl','decafparser.py',10),
  ('class_decl -> CLASS ID placeholder1','class_decl',3,'p_class_decl','decafparser.py',11),
  ('placeholder1 -> { class_body_decl placeholder2 }','placeholder1',4,'p_class_decl','decafparser.py',12),
  ('placeholder2 -> class_body_decl placeholder2','placeholder2',2,'p_class_decl','decafparser.py',13),
  ('placeholder2 -> empty','placeholder2',1,'p_class_decl','decafparser.py',14),
  ('class_body_decl -> field_decl','class_body_decl',1,'p_class_decl','decafparser.py',15),
  ('class_body_decl -> method_decl','class_body_decl',1,'p_class_decl','decafparser.py',16),
  ('class_body_decl -> constructor_decl','class_body_decl',1,'p_class_decl','decafparser.py',17),
  ('field_decl -> modifier var_decl ;','field_decl',3,'p_field_decl','decafparser.py',20),
  ('modifier -> placeholder3 placeholder4','modifier',2,'p_field_decl','decafparser.py',21),
  ('placeholder3 -> PUBLIC','placeholder3',1,'p_field_decl','decafparser.py',22),
  ('placeholder3 -> PRIVATE','placeholder3',1,'p_field_decl','decafparser.py',23),
  ('placeholder3 -> empty','placeholder3',1,'p_field_decl','decafparser.py',24),
  ('placeholder4 -> STATIC','placeholder4',1,'p_field_decl','decafparser.py',25),
  ('placeholder4 -> empty','placeholder4',1,'p_field_decl','decafparser.py',26),
  ('var_decl -> type variables','var_decl',2,'p_field_decl','decafparser.py',27),
  ('type -> INT','type',1,'p_field_decl','decafparser.py',28),
  ('type -> FLOAT','type',1,'p_field_decl','decafparser.py',29),
  ('type -> BOOLEAN','type',1,'p_field_decl','decafparser.py',30),
  ('type -> ID','type',1,'p_field_decl','decafparser.py',31),
  ('variables -> variable placeholder5','variables',2,'p_field_decl','decafparser.py',32),
  ('placeholder5 -> , variable placeholder5','placeholder5',3,'p_field_decl','decafparser.py',33),
  ('placeholder5 -> empty','placeholder5',1,'p_field_decl','decafparser.py',34),
  ('variable -> ID','variable',1,'p_field_decl','decafparser.py',35),
  ('method_decl -> modifier type ID ( placeholder7 ) block','method_decl',7,'p_method_decl','decafparser.py',38),
  ('method_decl -> modifier VOID ID ( placeholder7 ) block','method_decl',7,'p_method_decl','decafparser.py',39),
  ('constructor_decl -> modifier ID ( placeholder7 ) block','constructor_decl',6,'p_method_decl','decafparser.py',40),
  ('placeholder7 -> formals','placeholder7',1,'p_method_decl','decafparser.py',41),
  ('placeholder7 -> empty','placeholder7',1,'p_method_decl','decafparser.py',42),
  ('formals -> formal_param placeholder8','formals',2,'p_method_decl','decafparser.py',43),
  ('placeholder8 -> , formal_param placeholder8','placeholder8',3,'p_method_decl','decafparser.py',44),
  ('placeholder8 -> empty','placeholder8',1,'p_method_decl','decafparser.py',45),
  ('formal_param -> type variable','formal_param',2,'p_method_decl','decafparser.py',46),
  ('block -> { placeholder9 }','block',3,'p_block','decafparser.py',49),
  ('placeholder9 -> stmt placeholder9','placeholder9',2,'p_block','decafparser.py',50),
  ('placeholder9 -> empty','placeholder9',1,'p_block','decafparser.py',51),
  ('stmt -> openStmt','stmt',1,'p_block','decafparser.py',52),
  ('stmt -> closedStmt','stmt',1,'p_block','decafparser.py',53),
  ('openStmt -> IF ( expr ) stmt','openStmt',5,'p_block','decafparser.py',54),
  ('openStmt -> IF ( expr ) closedStmt ELSE openStmt','openStmt',7,'p_block','decafparser.py',55),
  ('openStmt -> WHILE ( expr ) openStmt','openStmt',5,'p_block','decafparser.py',56),
  ('openStmt -> FOR ( placeholder11 ; placeholder12 ; placeholder11 ) openStmt','openStmt',9,'p_block','decafparser.py',57),
  ('closedStmt -> RETURN placeholder12 ;','closedStmt',3,'p_block','decafparser.py',58),
  ('closedStmt -> stmt_expr ;','closedStmt',2,'p_block','decafparser.py',59),
  ('closedStmt -> BREAK ;','closedStmt',2,'p_block','decafparser.py',60),
  ('closedStmt -> CONTINUE ;','closedStmt',2,'p_block','decafparser.py',61),
  ('closedStmt -> var_decl','closedStmt',1,'p_block','decafparser.py',62),
  ('closedStmt -> ;','closedStmt',1,'p_block','decafparser.py',63),
  ('closedStmt -> block','closedStmt',1,'p_block','decafparser.py',64),
  ('closedStmt -> IF ( expr ) closedStmt ELSE closedStmt','closedStmt',7,'p_block','decafparser.py',65),
  ('closedStmt -> WHILE ( expr ) closedStmt','closedStmt',5,'p_block','decafparser.py',66),
  ('closedStmt -> FOR ( placeholder11 ; placeholder12 ; placeholder11 ) closedStmt','closedStmt',9,'p_block','decafparser.py',67),
  ('placeholder11 -> stmt_expr','placeholder11',1,'p_block','decafparser.py',68),
  ('placeholder11 -> empty','placeholder11',1,'p_block','decafparser.py',69),
  ('placeholder12 -> expr','placeholder12',1,'p_block','decafparser.py',70),
  ('placeholder12 -> empty','placeholder12',1,'p_block','decafparser.py',71),
  ('literal -> INT_CONST','literal',1,'p_primary','decafparser.py',74),
  ('literal -> FLOAT_CONST','literal',1,'p_primary','decafparser.py',75),
  ('literal -> STRING_CONST','literal',1,'p_primary','decafparser.py',76),
  ('literal -> NULL','literal',1,'p_primary','decafparser.py',77),
  ('literal -> TRUE','literal',1,'p_primary','decafparser.py',78),
  ('literal -> FALSE','literal',1,'p_primary','decafparser.py',79),
  ('primary -> literal','primary',1,'p_primary','decafparser.py',80),
  ('primary -> THIS','primary',1,'p_primary','decafparser.py',81),
  ('primary -> SUPER','primary',1,'p_primary','decafparser.py',82),
  ('primary -> ( expr )','primary',3,'p_primary','decafparser.py',83),
  ('primary -> NEW ID ( placeholder14 )','primary',5,'p_primary','decafparser.py',84),
  ('primary -> lhs','primary',1,'p_primary','decafparser.py',85),
  ('primary -> method_invocation','primary',1,'p_primary','decafparser.py',86),
  ('placeholder14 -> arguments','placeholder14',1,'p_primary','decafparser.py',87),
  ('placeholder14 -> empty','placeholder14',1,'p_primary','decafparser.py',88),
  ('arguments -> expr placeholder15','arguments',2,'p_primary','decafparser.py',89),
  ('placeholder15 -> , expr placeholder15','placeholder15',3,'p_primary','decafparser.py',90),
  ('placeholder15 -> empty','placeholder15',1,'p_primary','decafparser.py',91),
  ('lhs -> field_access','lhs',1,'p_primary','decafparser.py',92),
  ('field_access -> primary . ID','field_access',3,'p_primary','decafparser.py',93),
  ('field_access -> ID','field_access',1,'p_primary','decafparser.py',94),
  ('method_invocation -> field_access ( placeholder14 )','method_invocation',4,'p_primary','decafparser.py',95),
  ('expr -> assign','expr',1,'p_expr','decafparser.py',98),
  ('expr -> p1','expr',1,'p_expr','decafparser.py',99),
  ('assign -> lhs = expr','assign',3,'p_expr','decafparser.py',100),
  ('assign -> lhs PLUS_PLUS','assign',2,'p_expr','decafparser.py',101),
  ('assign -> PLUS_PLUS lhs','assign',2,'p_expr','decafparser.py',102),
  ('assign -> lhs MINUS_MINUS','assign',2,'p_expr','decafparser.py',103),
  ('assign -> MINUS_MINUS lhs','assign',2,'p_expr','decafparser.py',104),
  ('p1 -> p1 BOOL_OR p2','p1',3,'p_expr','decafparser.py',105),
  ('p1 -> p2','p1',1,'p_expr','decafparser.py',106),
  ('p2 -> p2 BOOL_AND p3','p2',3,'p_expr','decafparser.py',107),
  ('p2 -> p3','p2',1,'p_expr','decafparser.py',108),
  ('p3 -> p3 EQUAL p4','p3',3,'p_expr','decafparser.py',109),
  ('p3 -> p3 NOT_EQUAL p4','p3',3,'p_expr','decafparser.py',110),
  ('p3 -> p4','p3',1,'p_expr','decafparser.py',111),
  ('p4 -> p4 < p5','p4',3,'p_expr','decafparser.py',112),
  ('p4 -> p4 > p5','p4',3,'p_expr','decafparser.py',113),
  ('p4 -> p4 LESS_THAN_OR_EQUAL p5','p4',3,'p_expr','decafparser.py',114),
  ('p4 -> p4 GREATER_THAN_OR_EQUAL p5','p4',3,'p_expr','decafparser.py',115),
  ('p4 -> p5','p4',1,'p_expr','decafparser.py',116),
  ('p5 -> p5 + p6','p5',3,'p_expr','decafparser.py',117),
  ('p5 -> p5 - p6','p5',3,'p_expr','decafparser.py',118),
  ('p5 -> p6','p5',1,'p_expr','decafparser.py',119),
  ('p6 -> p6 * p7','p6',3,'p_expr','decafparser.py',120),
  ('p6 -> p6 / p7','p6',3,'p_expr','decafparser.py',121),
  ('p6 -> p7','p6',1,'p_expr','decafparser.py',122),
  ('p7 -> ! p7','p7',2,'p_expr','decafparser.py',123),
  ('p7 -> + p7','p7',2,'p_expr','decafparser.py',124),
  ('p7 -> - p7','p7',2,'p_expr','decafparser.py',125),
  ('p7 -> primary','p7',1,'p_expr','decafparser.py',126),
  ('stmt_expr -> assign','stmt_expr',1,'p_stmt_expr','decafparser.py',129),
  ('stmt_expr -> method_invocation','stmt_expr',1,'p_stmt_expr','decafparser.py',130),
  ('empty -> <empty>','empty',0,'p_empty','decafparser.py',133),
]
